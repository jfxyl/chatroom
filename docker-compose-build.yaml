version: '3.8'

networks:
  chatroom:

volumes:
  mysqldata:

services:
  mysql:
    image: mysql:5.7
    container_name: chatroom-mysql
    restart: always
    networks:
      - chatroom
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: chatroom
    command: [
      '--character-set-server=utf8mb4',
      '--collation-server=utf8mb4_general_ci',
    ]
    volumes:
      - mysqldata:/var/lib/mysql
    ports:
      - "3307:3306"

  rocketmq-namesrv:
    image: apache/rocketmq:4.9.1
    container_name: chatroom-rocketmq-namesrv
    restart: always
    networks:
      - chatroom
    ports:
      - "9876:9876"
    command: sh mqnamesrv

  rocketmq-broker:
    image: apache/rocketmq:4.9.1
    container_name: chatroom-rocketmq-broker
    restart: always
    networks:
      - chatroom
    depends_on:
      - rocketmq-namesrv
    environment:
      - "NAMESRV_ADDR=chatroom-rocketmq-namesrv:9876"
    ports:
      - "10909:10909"
      - "10911:10911"
    command: sh mqbroker -n chatroom-rocketmq-namesrv:9876

  rocketmq-console:
    image: styletang/rocketmq-console-ng:1.0.0
    container_name: chatroom-rocketmq-console
    restart: always
    networks:
      - chatroom
    environment:
      JAVA_OPTS: "-Drocketmq.namesrv.addr=chatroom-rocketmq-namesrv:9876"
    ports:
      - "8081:8080"

  myapp:
    build:
      context: .
      dockerfile: app.dockerfile
    container_name: chatroom
    restart: always
    networks:
      - chatroom
    depends_on:
      - mysql
      - rocketmq-broker
    environment:
      MYSQL_HOST: mysql
      MYSQL_PORT: 3307
      MYSQL_USER: root
      MYSQL_PASSWORD: 123456
      MYSQL_DATABASE: chatroom
      ROCKETMQ_NAMESRV_ADDR: rocketmq-namesrv:9876
    ports:
      - "80:80"


